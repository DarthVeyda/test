using System;
using System.Text;

namespace ProjectEuler
{
    /*
     * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
     * By starting with 1 and 2, the first 10 terms will be:
     * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
     * find the sum of the even-valued terms.
     */

    internal class Problem2 : ISolvable
    {
        private readonly double Phi = (1 + Math.Sqrt(5)) / 2;
        private readonly double phi = (1 - Math.Sqrt(5)) / 2;
        private readonly int _cap;
        public Problem2(int cap) { _cap = cap; }

        public long? SolutionValue { get; set; }

        public long Solve() 
        {
            long Sum = 0;
            int Term = 0;
            int Count = 1;
            //an = [ Phin - (phi)n ]/Sqrt[5]. 
            do 
            {
                Term = Convert.ToInt32((Math.Pow(Phi, Count) - Math.Pow(phi, Count)) / Math.Sqrt(5));
                if (Term % 2 == 0)
                    Sum += Term;
                Count++;
            } 
            while (Term <= _cap);

            return Sum;
        }


        public StringBuilder SolutionOutput()
        {
            StringBuilder result = new StringBuilder();
            result.AppendLine("Problem 2:");

            result.AppendFormat("The sum of the even-valued terms in Fibonacci sequence lesser than {0} equals {1}", _cap, Solve()); 
            return result;
        }
    }
}
